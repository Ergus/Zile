--- gnulib/top/README-release	2013-01-05 16:09:44.000000000 +0700
+++ HACKING	2013-01-05 16:42:47.000000000 +0700
@@ -1,3 +1,42 @@
+                      GNU Zile developers' notes
+                      --------------------------
+
+     Copyright (c) 2011-2013 Free Software Foundation, Inc.
+
+     Copying and distribution of this file, with or without
+     modification, are permitted in any medium without royalty
+     provided the copyright notice and this notice are preserved.
+
+Coding style
+------------
+
+Rather than attempt an exhaustive list, the following points address
+just FDQs (Frequently Discussed Questions).
+
+0. Follow the style of existing code. Consistency is more important
+than any particular element of style.
+
+1. Avoid reversed comparisons. Arguably a good idea in C, but in Lua
+"if a = 0 then..." is a syntax error, so there's no need to inflict
+"if 0 == a then..." on those who don't like that style.
+ 
+2. Put space around operators and variables: "for i = 0, #t", not
+"for i=0,#t". The latter is cramped and harder to read.
+ 
+3. Use one-line conditionals sparingly. As a rule of thumb, only use
+them when the entire line is shorter than 70 characters. Their use is
+encouraged in code of the form "if CONDITION then return end", and a
+one-line "if...then...else...end" may often be superior to the
+quasi-ternary operator "x and a or b" (where if "a" can be false
+results in "b").
+
+
+Making a release
+----------------
+
+To make a release automatically, you need ncftp, and woger, from
+http://rrt.sc3d.org/Software/woger
+ 
 Here are most of the steps we (maintainers) follow when making a release.
 
 * Start from a clean, up-to-date git directory on "master":
@@ -21,7 +60,7 @@
 
 * Check that the NixOS/Hydra autobuilder is reporting all is well:
 
-    http://hydra.nixos.org/jobset/gnu/@PACKAGE@-master
+    http://hydra.nixos.org/jobset/gnu/zile-master
 
 * Run the following command to download any new translations:
 
@@ -48,53 +87,11 @@
   it builds and passes all tests.
 
 * While that's happening, write the release announcement that you will
-  soon post.  Start with the template, $HOME/announce-@PACKAGE@-X.Y
+  soon post.  Start with the template, $HOME/announce-zile-X.Y
   that was just created by that "make" command.
 
 Once all the builds and tests have passed,
 
-* Run the gnupload command that was suggested by your "make release"
-  run above, or run
-
-    make upload RELEASE='X.Y TYPE'
-
-* Wait a few minutes (maybe up to 30?) and then use the release URLs to
-  download all tarball/signature pairs and use gpg --verify to ensure
-  that they're all valid.
-
-* Push the NEWS-updating changes and the new tag:
-
-    v=$(cat .prev-version)
-    git push origin master tag v$v
-
-* Announce it on Savannah first, so you can include the savannah.org
-  announcement link in the email message.
-
-  Go to the news-submission form:
-
-    https://savannah.gnu.org/news/submit.php?group=@PACKAGE@
-
-  If it does not work, then enable "News" for the project via this link:
-
-    https://savannah.gnu.org/project/admin/editgroupfeatures.php?group=@PACKAGE@
-
-  Write something like the following:
-
-    Subject: @PACKAGE@-X.Y released [stable]
-    +verbatim+
-    ...paste the announcement here...
-    -verbatim-
-
-  Then go here to approve it:
-
-    https://savannah.gnu.org/news/approve.php?group=@PACKAGE@
-
-* Send the announcement email message.
-
-* After each non-alpha release, run
-
-    make web-manual-update
-
-  to update the on-line manual accessible at
+* Run:
 
-    http://www.gnu.org/software/@PACKAGE@/manual/
+    make release
