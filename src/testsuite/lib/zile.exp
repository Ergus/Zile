# DejaGnu framework for Zile
#
# Copyright (c) 2008 Free Software Foundation, Inc.
#
# This file is part of GNU Zile.
#
# GNU Zile is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
#
# GNU Zile is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU Zile; see the file COPYING.  If not, write to the
# Free Software Foundation, Fifth Floor, 51 Franklin Street, Boston,
# MA 02111-1301, USA.

# FIXME: Some problem with sending ^J: newline-and-indent test has to
# be done with M-x newline-and-indent.

set zile_path $objdir/../zile
set test_path $srcdir/zile.test
set scratch_path $objdir

proc zile_version {} {
    global zile_path
    set tmp [exec $zile_path --version]
    regexp "GNU Zile (\[^\n\]*)\n.*" $tmp tmp version
    clone_output "$zile_path version $version\n"
}

proc zile_start {args} {
    global spawn_id
    global zile_path
    spawn $zile_path -q $args
}

proc zile_exit {} {}

# FIXME: Why is this delay needed? Tom Dickey thinks it shouldn't be.
set send_slow {1 .01}
proc send {ignore arg} {
    sleep .1
    exp_send -s -- $arg
}

proc interactive_test { test input } {
    global test_path
    global scratch_path

    set edit_file $scratch_path/$test.input
    exec cp $test_path/zile_test.input $edit_file
    exec chmod +w $edit_file
    zile_start $edit_file

    send -- $input

    expect eof

    if { [catch { exec diff $test_path/$test.output $edit_file } msg] } {
        puts "Error: $::errorCode"
        fail $test
    } else {
        exec rm $edit_file $edit_file~
        pass $test
    }
}
