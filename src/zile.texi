\input texinfo   @c -*-texinfo-*-
@setfilename zile.info
@settitle The Zile Manual

@dircategory Editors
@direntry
* Zile: (zile).                 A very small Emacs-subset editor.
@end direntry

@c If "finalout" is commented out, the printed output will show
@c black boxes that mark lines that are too long.  Thus, it is
@c unwise to comment it out when running a master in case there are
@c overfulls which are deemed okay.

@iftex
@c @finalout
@end iftex

@setchapternewpage odd

@titlepage
@title The Zile Manual
@subtitle for GNU Zile version 2.3
@subtitle February 2009
@author Sandro Sigala and Reuben Thomas

@page
@vskip 0pt plus 1filll
Copyright @copyright{} 2008, 2009 Free Software Foundation, Inc.

Copyright @copyright{} 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004 Sandro Sigala

Copyright @copyright{} 2003, 2004, 2005, 2006, 2007, 2008 Reuben Thomas

Copyright @copyright{} 2004 David A. Capello

Copyright @copyright{} 2001 Scott Lawrence

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with no
Invariant Sections, Front-Cover Texts or Back-Cover Texts.
A copy of the license is included in the section
entitled ``GNU Free Documentation License''.

@end titlepage

@c ---------------------------------------------------------------------------
@node Top, Overview, (dir), (dir)

This is the @emph{GNU Zile} manual.

GNU Zile is small Emacs clone.
Zile is a customizable, self-documenting real-time display editor.
Zile was written to be as similar as possible to Emacs; every Emacs
user should feel at home with Zile.

Zile's home page at @url{http://www.gnu.org/software/zile/}.

@menu
* Overview::                    An overview of the Zile editor.
* Features::                    The characteristics of Zile.
* Invoking Zile::               Command line options that you can give to Zile.
* Initialization file::         The ``.zile'' initialization file.
* Getting help::                How to get help in Zile.
* Key names::                   How the keys are named.
* Functions::                   The list of functions.
* Variables::                   The list of variables.
* Help and bug reports::        How to get help and report bugs.
* GNU Free Documentation License::  The GNU Free Documentation License.
@end menu

@c ---------------------------------------------------------------------------
@node Overview, Features, Top, Top
@chapter Overview

GNU Zile is a lightweight clone of Emacs, featuring a bare minimum of
commands and features required for useful editing. It is written
entirely in @emph{@w{ISO C90}}, and should run on any POSIX system that
has curses.

@c ---------------------------------------------------------------------------
@node Features, Invoking Zile, Overview, Top
@chapter Features

@itemize -
@item Small but fast and powerful.
It is useful for small footprint installations (e.g. on floppy disk) and
small computers.
@item 8-bit clean.
Zile can operate with binary files.
@item Looks like @emph{Emacs}.
Key sequences and function names are identical to Emacs.
@item Multi buffer editing with multi level undo.
Zile can open as many files and restore as many undo operations as
memory allows.
@item Multi window.
Zile can display multiple windows on the screen.
@item Killing, yanking and registers.
The killing, yanking and register features of Emacs are available
in Zile.
@item Minibuffer completion.
This works for @kbd{M-x} commands, file, buffer and variable names.
@item Auto fill (word wrap).
Zile automatically breaks the lines when they become too wide (if
@i{Auto Fill Mode} is enabled).
@item Auto line ending detection.
When a file is loaded, its line ending is detected automatically as
either LF, CR or CRLF.  Files with mixed line endings will be displayed
as if they had LF line endings.  If a CR line ending is detected,
``(Mac)'' is shown in the modeline, and for CRLF, ``(DOS)''.
@end itemize

@c ---------------------------------------------------------------------------
@node Invoking Zile, Initialization file, Features, Top
@chapter Invoking Zile

The options are as follows:

@c FIXME: Make this an include of opts.texi
@table @samp
@item FILE
Edit file @file{FILE}.
@item +LINE
Go to line @samp{LINE} in the next file opened.
@item --load ,-l FILE
Execute a file of Lisp code named FILE.
@item --no-init-file, -q
Do not load an init file.
@item --help
Display a help message and exit.
@item --version
Display version information and exit.
@end table

Zile returns 0 on successful termination, 1 if it cannot start up, for
example because of an invalid command-line argument, and 2 if it
crashes or runs out of memory.

@c ---------------------------------------------------------------------------
@node Initialization file, Getting help, Invoking Zile, Top
@chapter Initialization file

When Zile is started, it normally loads the @file{.zile} file in your
home directory.  We call this file your ``initialization file'' because
it specifies how to initialize Zile for you.  You can use the command
line switch @samp{-q} to tell Zile not to load the initialization file.

@menu
* File syntax::                 The initialization file syntax.
* Sample file::                 A sample initialization file.
@end menu

@c ---------------------------------------------------------------------------
@node File syntax, Sample file, Initialization file, Initialization file
@section File syntax

The initialization file is written in Zile Lisp.  Zile Lisp is a tiny
subset of Emacs Lisp that consists of the Zile commands plus
@code{setq}.  See the next subsection for a sample initialization file.

@c ---------------------------------------------------------------------------
@node Sample file,  , File syntax, Initialization file
@section A sample file

This is an initialization file that shows the default variable settings.
You can use it as a model for your own init file.

@include dotzile.texi

@c ---------------------------------------------------------------------------
@node Getting help, Key names, Initialization file, Top
@chapter Getting help

This table contains the commands that can be used during an editing
session to get help.

@table @kbd
@item C-h C-f, @key{f1} C-f
Show the Frequently Asked Questions about Zile.
@item C-h f, @key{f1} f
Describe a function.
@item C-h k, @key{f1} k
Describe a key sequence.
@item C-h b, @key{f1} b
Show the defined bindings.
@item C-h v, @key{f1} v
Describe a variable.
@item C-h w, @key{f1} w
Show the key or keys to which a command is bound.
@end table

@c ---------------------------------------------------------------------------
@node Key names, Functions, Getting help, Top
@chapter Key names

This table contains the names of the keys that are used in Zile.

@c FIXME: Generate as keys.texi
@table @key
@item SPC
Space
@item RET
Return
@item TAB
Tab
@item BACKSPACE
Backspace
@item ESC
Escape
@item DELETE
Delete
@item CTRL
Control
@item META
Meta (also known as @key{EDIT} or @key{ALT} on some keyboards).
@item PRIOR
PgUp (page up) (also called @key{PAGEUP}).
@item NEXT
PgDn (page down) (also called @key{PAGEDOWN}).
@end table

In key combinations, like @kbd{M-g}, the @kbd{M-} prefix means hold the
@key{META} (or @key{EDIT} or @key{ALT}) key down while typing @kbd{g}.
The combination @kbd{C-x} means hold the @key{CTRL} key down while
typing @kbd{x}.

@c ---------------------------------------------------------------------------
@node Functions, Variables, Key names, Top
@chapter Functions

This table contains the full list of available functions, that can be
called with the @kbd{M-x} key (most functions also have a key binding).

@include funcs.texi

@c ---------------------------------------------------------------------------
@node Variables, Help and bug reports, Functions, Top
@chapter Variables

This table contains the full list of available variables, that can be
modified at run-time with the @samp{set-variable} function or set at start-up
in the @file{.zile} initialization file.

@include vars.texi

@c ---------------------------------------------------------------------------
@node Help and bug reports, GNU Free Documentation License, Variables, Top
@chapter Help and bug reports

@c FIXME: Get the URIs from PACKAGE_BUFREPORT, &c.
Questions, comments and requests should be sent to
@email{help-zile@@gnu.org}. Bug reports should be sent to
@email{bug-zile@@gnu.org}. Savannah users are welcome to file bug reports,
feature requests and patches directly in the relevant tracker at
@uref{http://savannah.gnu.org/projects/zile/}.

@c ---------------------------------------------------------------------------
@node GNU Free Documentation License,  , Help and bug reports, Top
@chapter The GNU Free Documentation License

@include fdl.texi

@contents

@bye

Local Variables:
compile-command: "texi2dvi zile.texi"
End:

@c  LocalWords:  Zile Sigala Capello
