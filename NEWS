GNU Zile NEWS                                    -*- outline -*-

* Noteworthy changes in release ?.? (????-??-??) [?]

** Miscellaneous

 - Zile has a new backronym: Zile Implements Lua Editors.

   The Zile project is being rewritten as a toolkit for developing
   text editors in Lua.

 - Now that the Lua implementation has feature parity with the older
   C implementation, the C implementation is being moth-balled.  All
   future releases will be made from the Lua implementation.

 - The release numbers will be single integers for consistency with
   the other Lua projects I maintain (not coincidentally, all are
   dependencies of GNU Zile).  The final C Zile releases were 2.4.x,
   and the first Lua Zile release was version 3.

** Incompatible changes

  - Now that GNU Zile is the text editor support infrastructure, the
    editor formerly known as Zile has been renamed to Zemacs, a light-
    weight micro-Emacs that has feature parity with the legacy C Zile
    implementation.  There is no 'zile' executable any more, it has
    been superseded by 'zemacs'.

  - Zlisp now uses a more Emacs-24-like 'shell-command-on-region'
    implementation, where the replace parameter is now the fifth
    argument (rather than the fourth), and adds a new fourth parameter
    which can specify an output buffer other than only current buffer
    or temporary '*Shell Command Output*' buffer.

** New features

  - New "bundle" loading scheme for JSON-like Lua format tables with
    `require`.

  - Beginnings of LDoc generated api documentation of Zile modules.

  - Legacy Zemacs tests are migrating to Specl and have significantly
    better coverage now.

*** Build-related

  - Now fully relocatable, with all resources found using the
    package.path directories. This means the distributions work out of
    box (./lib/zemacs/zemacs) without running configure or make.  It
    also means the lua source rock installs directly by copying files
    into the rocks tree.

  - LuaRocks install doesn't copy config.ld to $docdir.

*** Zile

  - Cursor movement on moderate to large size files is a good order of
    magnitude faster, by virtue of using Alien buffers and calling C
    `memmem` and `memrchr` to find buffer line-ends etc.

  - Vast improvements to speed of search functions.

*** Zz

  - A new editor, currently heavily based on Zemacs, but with the zlisp
    evaluator removed in favour of direct Lua evaluation.

  - UI coloring bundle file format, and a slightly more colorful default
    interface for Zz.

  - Syntax highlighting bundle file format, which can be made by
    mechanically translating existing TextMate Language files, though
    not all TextMate Language file features are supported yet.

    Note that, for compatibility with TextMate Language definitions, the
    highlighter (and thus Zz) now require lrex-oniguruma.  However, this
    also makes for trivial compatibility with hundreds of existing
    file formats - subject to mechanical translation of the TextMate
    sources.

  - Syntax highlighting modes for Lua sources and diff/patch files.

*** Zemacs

  - Support for FAQ, COPYING and NEWS browsing in editor with \C-h\C-f,
    \C-h\C-c and \C-h\C-n (or F1 prefix equivalents).

  - In docstrings for interactive commands and user configurable
    variables, \\[command-name] is now expanded to a key-binding for
    `command-name` by "\C-hf", "\C-hv" etc.  just like Emacs. For
    example, see the documentation for `start-kbd-macro` and
    `end-kbd-macro`.

  - `describe-function` now shows bound keys and function signatures
    in displayed help text.

  - `describe-variable` now shows original values and notification for
    buffer-local variables.

  - New `*Messages*` buffer accumulates minibuf messages.  Maximum
    number of retained messages is limited according to new variable,
    `message-log-max`.  \C-h v message-log-max RET for details.

*** Zlisp

  - Now has a fully functional reader and evaluator so that, for
    example, calling functions with arguments that are themselves
    function calls or variables works as expected.

  - Zlisp strings support embedded double-quotes with backslash escapes,
    for example: "a \"quoted\" substring".

  - `beginning-of-line` and `end-of-line` now support optional argument
    for stepping over lines before moving point to beginning or end of
    that line resp.

  - `copy-region-as-kill` understands it's parameters now, and copies
    the described region correctly.

  - `eval-expression` displays the result of the expression it evaluates
    in the mini-buffer upon completion.

  - `forward-line` now returns the number of requested line moves that
    were not actioned, and treats a non-empty line at the end of a file
    correctly.

  - `message` now treats it's first argument as a format-string, and
    plugs % specifiers with values of the remaining args.

  - `query-replace-regexp` works like `query-replace` but treats the
    search string argument as a regular expression.

  - `save-buffers-kill-emacs` accepts an optional prefix argument; when
    non-nil save all modified buffers without asking.

  - `where-is` accepts an optional `insert` argument; when non-nil
    insert the result into the current buffer instead of the echo area.

  - New functions: `buffer-size`, `mark`, `point`, `point-max`,
    `point-min`.
    \C-h f ... RET for details.

*** Zlc

  - `defsubr` parameter lists now support &optional and &rest parameters.

  - `interactive` supports a "Nprompt: " and "p", making argument checking
    and reading more consistent across zlisp function implementations.

** Bug fixes

 - zemacs 'universal-argument' guards against non-ASCII keys, so you
   can execute a key sequences like "\M-35\RIGHT" without inducing a
   "char out of range" crash.

 - Removed latent infinite loops in fallback `MutableString:find` and
   `MutableString:rfind` (when the C library doesn't provide `memmem` or
   `memrchr` resp.).

 - No longer mangles the last character of a multi-line buffer when
   using fallback `MutableString:find`.


* Noteworthy changes in release 3 (2013-09-25) [alpha]

** Bug fixes

  Arrow keys work properly when resuming from M-x debug.


* Noteworthy changes in release 2.5.0.50 (2011-09-20) [alpha]

** Bug fixes

  Many bugs have been fixed.

** Build-related

  Many bugs have been fixed. Building against the required Lua
  libraries has been simplified; the required libraries can now all be
  installed as LuaRocks.

  Since C development has now been moved to the 2.4 series, the Lua
  series is now numbered 2.5.x.


* Noteworthy changes in release 2.4.0.50 (2011-05-04) [alpha]

** Bug fixes

  Many bugs have been fixed.

** Build-related

  The build system is now non-recursive (thanks to Gary Vaughan).


* Noteworthy changes in release 2.4.2 (2011-10-03) [stable]

** Bug fixes

  Fix a basic performance bug introduced in 2.4.0.60.

** Build-related

  Don't enable Valgrind by default, and explain that correct
  suppressions are needed to use it successfully.


* Noteworthy changes in release 2.3.24 (2011-04-29) [stable]

** Bug fixes

  Fix kill-line with prefix argument.

  Fix a cosmetic problem with multiple ESC-digit combinations.

  Use gnulib’s mkstemp to avoid problems on some platforms.

  Fix initial screen setup when some files are loaded on the command
  line.

** Build-related

  Re-automate a bit more of the release, using gnulib and woger.

  Add more compiler warnings.

** Miscellaneous

  As usual, various bits of code cleanup and simplification.


* Noteworthy changes in release 2.4.0alpha1 (2011-03-25) [alpha]

** Major changes

  This release is completely rewritten in Lua. No doubt it introduces
  lots of bugs, but it is intended to be functionally identical to the
  C version.


* Noteworthy changes in release 2.3.23 (2011-03-14) [stable]

** Bug fixes

  {beginning,end}-of-buffer now take account of transient-mark-mode
  (bug present since “forever”).

** Build-related

  Turn on more compiler and build system, and run-time checks (thanks,
  gnulib!).


* Noteworthy changes in release 2.3.22 (2011-03-03)

This release fixes a bug in forward regex isearch introduced recently,
and makes the build system use silent rules by default.


Release 2.3.21

This release fixes a bug that caused build failure on non-GNU systems,
and a bug in backward search introduced in 2.3.18, and simplifies the
test system. A little other code cleanup was done.

Release 2.3.20

This release fixes a potential buffer overflow, search and replace
with embedded NULs, a bug in the build system (the Zile-only tests now
run correctly when an EMACS environment variable is defined), and a
bug introduced in 2.3.17 which caused consecutive kills not to save
the killed text (thanks to Chris Leyon for the report). Some code was
cleaned up and better use made of gnulib. The build scripts that were
previously in Lua have been rewritten in Perl; Perl is now required to
build Zile (previously, Lua was not required, at the expense of making
the build system more complicated and fragile). A cyclomatic
complexity report on the C code can now be produced.

Release 2.3.19

This release fixes a space leak, a small bug in reading filenames in
the minibuffer introduced in 2.3.18, and some behaviour that was not
the same as Emacs, and cleans up the code a little.

Release 2.3.18

This release fixes some minor space leaks, a read of freed memory, and
a bug in quoted-insert, stops Zile from catching the user signal
SIGQUIT, and cleans the code up a little.

Release 2.3.17

This release fixes a crash in undo introduced in 2.3.16 as well as
some small bugs in delete-window, and contains some code cleanup.

Release 2.3.16

This release fixes a potential buffer overrun, and a long-standing bug
in the handling of the key string "C-_", and cleans up the code a
little more.

Release 2.3.15

This release fixes the default universal argument, which should be 4
but was 16, and also some cosmetic errors with the display of
universal arguments in the minibuffer. Some fixes to the build system
were also made (thanks to Giuseppe Scrivano).

Release 2.3.14

This release fixes a minor bug in filename tab expansion, which
resulted in `/' being expanded to `~/'.

Release 2.3.13

This release fixes bugs in `kill-line`, `scroll-up' and `scroll-down',
squashes some space leaks found by Valgrind, and fixes some build
problems reported by the indefatigable Nelson Beebe.

Release 2.3.12

This release fixes the +LINE command-line action, which was broken a
few releases ago, and makes a cosmetic fix to temporary buffers.

Release 2.3.11

This release fixes a crash in `find-alternate-file', a build system
bug, and various cosmetic bugs, and cleans up the code a little.

Release 2.3.10

This release runs the test suite on Emacs as well as Zile (currently,
requires Emacs 23 or later), and contains many small fixes to both the
test suite and to Zile to improve Emacs compatibility. Various other
bug fixes, improvements and tidy-ups have also been made. Note in
particular that the commands `suspend-zile', `save-buffers-kill-zile'
and `view-zile-FAQ' are now called `suspend-emacs',
`save-buffers-kill-emacs' and `view-emacs-FAQ' respectively, and
`kill-line' now works with non-positive arguments. Portability has
been improved, in particular to DOS systems.

Release 2.3.9

This release fixes a build problem on OSF/1.

Release 2.3.8

This release fixes a crash in find-file-alternate, and another
potential crash.

Release 2.3.7

This release fixes a crash in query-replace and a highlighting bug,
both introduced in 2.3.5. Some code cleanup was done. A bug in the
build system that caused help2man to be required to build Zile was
removed.

Release 2.3.6:

This release fixes a build-system bug that caused Lua to be required
to build the release.

Release 2.3.5:

This release fixes a bug in write-file, where the undo state was not
properly updated, resulting in dirty states being marked clean. A
crash bug in paragraph filling was fixed, and some other minor bugs.
The --funcall option was reintroduced for backwards compatibility with
Zile 2.2. The build system was made more portable. Some code cleanup
was done.

Release 2.3.4:

This release fixes yet another bug in filename completion, and a
potential crash that the bug exposed. Some minor code cleanup was
performed.

Release 2.3.3:

This release fixes two more bugs in filename completion introduced in
2.3.1. Users of 2.3.1 and 2.3.2 should upgrade. Some minor code
cleanup was also performed.

Release 2.3.2:

This release fixes a bug in filename completion introduced in the
previous release that had serious results, and some minor problems in
the build system, and improves the installation instructions. help2man
is now needed to build Zile (and has been since 2.3.1). I'm sorry I
described DejaGnu as "flaky" in my previous release announcement; the
faults I encountered were those of the underlying expect/Tcl
combination, and not DejaGnu's.

Release 2.3.1:

This release contains a rewrite of the test suite which drives Zile
directly, as DejaGnu proved to be insufficiently portable, and too
flaky. Two commands have been added to make it possible to write all
the tests in Lisp, namely execute-kbd-macro and insert-char. The
--script flag is now --load, which is what it really does. Various
commands have been made to work non-interactively. Duplication has
been reduced by generating much of the documentation from the code.
The info manual, which was not particularly useful and only duplicated
information available elsewhere, has been removed. Other small fixes
and improvements have been made.

Release 2.3.0:

This release continues the code cleanup and portability fixes started
in 2.2.60. gnulib is now used extensively, and 2,000 lines of code, or
about 20% of the code base, has been removed by refactoring,
simplification, and use of gnulib. The new minor version number
reflects the magnitude of the change.

To try to limit the number of bugs introduced as a result, and to aid
future maintenance, a DejaGnu test suite has been added, which tests
almost all the interactive commands.

Many small bugs have been fixed, including cases where Zile did not
behave like Emacs; some small limitations of Zile with respect to
Emacs have been removed.

Users are for the most part encouraged to upgrade, as this release is
believed to be stable; however, cautious users may want to wait for
further 2.3.x releases, or for a suitable length of time to elapse.

Release 2.2.61:

This release uses gnulib for regex, getopt, vasprintf, and various
other features, rather than previous ad hoc solutions, to improve
portability.

Release 2.2.60:

This release attempts to improve portability by using gnulib for
various non-standard features instead of idiosyncratic code and making
various other fixes. Thanks to Nelson Beebe for reporting many build
problems on a wide range of platforms; unfortunately I've not been
able to establish how many of them this release fixes. A crash and
related bug on attempting to kill when mark and point are the same
have been fixed. Some fatal error messages have been improved.

Release 2.2.59:

This release fixes various problems with release 2.2.58, including
shipping the wrong source code (oops), and automates the GNU release
process so that errors of this sort should no longer happen. The build
system was tidied a little.

Release 2.2.58:

This release makes Zile's transition to being a GNU program. Note the
new web site, distribution URL and support addresses. This release
also fixes the display of errors that occur during startup.

Release 2.2.57:

This release changes the code to meet GNU coding standards. It's not
recommended for users because there are no (intended!) functional
changes whatsoever, and it's just possible that new bugs have been
introduced.

Release 2.2.56:

This release fixes a bug that prevented top-bit-set characters being
bindable to commands.

Release 2.2.55:

This release allows Zile to produce core dumps when it crashes,
handles SIGBUS, and fixes a crash caused by trying to bind a command
to the empty string.

Changes since Zile 2.2

* Fix macro creation.
* Add --funcall back.
* termcap terminal replaced with ncurses again.
* Removed Allegro and EPOC support.
* Incremental search improved.
* "true" and "false" changed to "t" and "nil".
* Allow key-binding in .zile.
* Design fixes to mimic Emacs better.
* Various bug fixes.

Changes between Zile 2.0 - Zile 2.2

* More code cleanup.
* .zilerc replaced by .zile, which is a pseudo-Lisp file.
* Various other bug, design and documentation fixes.
* Add case-replace and kill-whole-line.
* Change command-line options to be more like Emacs.

Changes between Zile 1.7 BETA 3 - Zile 2.0

* Major modes and fontlock removed.
* Versioned backups and many other small frivolous features removed.
* FAQ overhauled.
* Many TODOs done, including functions added (notably fill-paragraph).
* Massive code cleanup.
* Build system overhauled.
* Support for different line endings.
* Port to EPOC.
* ncurses terminal replaced by termcap; allegro terminal added.

Changes between Zile 1.7 BETA 2 - Zile 1.7 BETA 3

* Changed Zile license from BSD to GNU GPL.
* You can use M-p and M-n (or Up and Down) in minibuffer to navigate
  through history elements.
* Added `transient-mark-mode' and `highlight-nonselected-windows'
  variables (removed old `highlight-region').
* Added `delete-blank-lines'.
* Modified the internal structures to handle point in a better way.
* Support indentation for text-mode.
* Added regexp search functions.
* Now the `exchange-point-and-mark' activates the mark.
* Fixed `insert_char' to don't move the mark when a character is
  inserted in the same mark position (this fixes the
  `exchange-point-and-mark' after a `yank').
* Fixed `insert_nstring' (used by `yank' for example) when it is used
  in overwrite-mode.
* Modified `previous-line' and `next-line' to Emacs behavior.
* Added `forward-sexp', `backward-sexp', `transpose-sexp', and
  `mark-sexp'.
* Added `forward-line' and `transpose-lines'.
* Added `transpose-chars' and `transpose-words' (they don't support
  uniarg yet).
* Fixed `forward-word'.
* `C-q' doesn't support overwrite-mode.
* Fixed `overwrite-mode' to Emacs behavior.
* Fixed `revert_action' to handle nested undo-sequences.
* Added `delete-horizontal-space' and `just-one-space'.
* Fixed a bug in strtokey0 to handle `M-\' key combination.
* Fixed the clock, now is updated correctly.
* Added `mark-word'.
* Fixed `isearch' to stop recording macros when you press C-g.
* Fixed the column indicator in the status line (now 0 is the first
  column).
* Modified `universal_argument' to Emacs behavior.
* Fixed overflow for long variable names in configuration file.
* Various bug-fixes and code cleanups.
* Search and replace (query-replace and replace-string) respect case.

Changes between Zile 1.6.1 - Zile 1.7 BETA 2

Note: 1.7 BETA 2 was produced from 1.6.1, not 1.6.2, but all the same
fixes were applied.

* Changed configure script so no syntax colouring modes are built by
  default.
* Implemented Java Mode.  Contributed by Marius Nita <marius@cs.pdx.edu>.
* Implemented C# Mode.  Contributed by Josef 'Jupp' Schugt <jupp@gmx.de>.
* Implemented Mail Mode (plus the five variables `font-mailN' and
  the variable `mail-mode-auto-fill') as suggested by Josef Schugt.
* Implemented the widely-used Emacs bindings:
    - `forward-word' (bound to `M-f'), `backward-word' (bound to `M-b');
    - `capitalize-word' (bount to `M-c');
    - `upcase-word' (bount to `M-u'), `downcase-word' (bount to `M-l');
* Implemented `describe-key-briefly' (bound to `C-h c').
* Implemented `shrink-window' (bound to `M-e').  Contributed by Marius Nita.
* Implemented `back-to-indentation' (bound to `M-m').  Contributed by
  Joseph Boyd <k963@bonbon.net>.
* Implemented `goto-char'.
* Implemented `revisions-kept' and `revisions-delete' variables as
  suggested by Josef Schugt.
* Added `-u rcfile' and `-v variable=value' command line options as
  requested by many users.
* Now multiple functions can be specified on command line with `-f func'.
* Now `quoted-insert' (bound to `C-q') accepts octal digits to
  insert particular characters.
* Cleaned up X Window terminal resize handling.  Low level SIGWINCH signal
  handling has been removed; now Zile relies only on ncurses KEY_RESIZE.
* The behavior of the `auto-font-lock' variable is changed in this version.
  Now the variable applies also to buffer mode changes.
* Fixed two old bugs thanks to Reuben Thomas <rrt@sc3d.org>.
* Patches provided by David A. Capello <dacap@users.sourceforge.net>:
    * implemented `kill-word', `backward-kill-word';
    * fixed bug in undo/redo;
    * fixed bug in highlight;
    * macros support `isearch' facility;
    * shell mode supports highlight for "cat<<EOF\n...\nEOF" stuff.  With
      this, added a new variable: `font-here-document';
    * better shell mode highlight: $identifier, and fixed the \'string\'
      problem;
    * optimized the selection highlight color;
    * added alias `sh-mode' to `shell-script-mode'.
* Integrated some excellent patches from Nicolas Duboc.
* Speed-up improvements.
* Many many other bug fixes.

Changes between Zile 1.6 - Zile 1.6.1

* Added `.m' extension to C Mode (for Objective-C files).
* Fixed window resize bug under xterm (\377 character was inserted).
* Typos and minor bug fixes.

Changes between Zile 1.5.3 - Zile 1.6

* Implemented incremental search (`isearch-forward', `isearch-backward').
* Implemented search & replace (`replace-string', `query-replace').
* Implemented shell commands (`shell-command', `shell-command-on-region').
* Implemented better handling of unexpected errors, with automatic file
  saving on Zile crash.

Changes between Zile 1.5.2 - Zile 1.5.3

* Fixed wrong behavior in novice mode (Font Lock automatically set).
* Fixed a few core dumps.

Changes between Zile 1.5.1 - Zile 1.5.2

* Implemented Shell-script Mode.
* Fixed Solaris compatibility bugs.
* Fixed bugs in C/C++ Font Lock parsing.

Changes between Zile 1.5 - Zile 1.5.1

* Fixed Minibuf filename completion bug.

Changes between Zile 1.4 - Zile 1.5

* Added `switch-to-correlated-buffer' (bound to `F11').
* Added `skip-splash-screen' variable.
* Extended Mini Help functionality; now there are three help pages.
* Reorganized partially the `F1'..`F12' keys.
* Added a reference card (see `etc/refcard.tex' and `etc/refcard.ps').
* User-invisible changes: introduced three new general-purpose libraries:
        - lib/alist.c	Doubly-linked lists
        - lib/astr.c	Dynamically allocated strings
        - lib/htable.c	Hash table functions (was hash.c)
  The new libraries are documented in their man pages (see lib/*.3).
  Starting from this version, the internal structures will be rewritten
  using these libraries.  This will make the code easier to maintain,
  and hopefully fixes some hidden bugs.
* Many bug fixes.

Changes between Zile 1.3 - Zile 1.4

* Added support for `F1'..`F12' keys.
* Implemented the following functions:
        tabify
        untabify
        copy-region-as-kill (bound to `M-w')
* Added support for xterm resizing (SIGWINCH signal).
* Added `text-mode-auto-fill' variable that automatically turns on the
  Auto Fill Mode in Text Mode.
* Now `set-variable' suggests the possibile variable values.
* Added `-f function' command line option for calling internal functions
  at Zile startup.
* Bug fixes.

Changes between Zile 1.2 - Zile 1.3

* Implemented region highlighting.
* Added support for non-English character sets.
* Fixed a security hole that made Zile prone to "symlink attack".

Changes between Zile 1.1 - Zile 1.2

* Fixed some memory leaks thanks to the dmalloc package.
* Added alternative key bindings (`M-h' replaces `C-h') that can be set
  using the `alternative-bindings' variable.
* Now the users with home "/" and users not recorded in the `/etc/passwd'
  file are handled correctly.

Changes between Zile 1.0a5 - Zile 1.1

* Fixed a lot of annoying bugs and updated the documentation.
* Added Auto Fill Mode.
* Added C++ Mode (ISO C++ 14882:1998).
* Updated C Mode keywords to latest C standard (ISO C 9899:1999).
* Implemented `goto-line' (M-g).  Contributed by
  Carsten Leonhardt <leo@debian.org>.
* Added backup directory feature.  Contributed by
  Tim Middelkoop <mtim@arranvale.com>.
* Added `describe-function' (C-h d), `describe-variable' (C-h v) and
  `describe-key' (C-h k).  Now the program is really self-documenting!
* Added `list-bindings' (C-h l b), `list-functions' (C-h l f) and
  `list-registers' (C-h l r).
* Now the search functions remember the last searched value.
* All the help functions bound to `M-h' are now bound to `C-h' like Emacs.
* Added a lot of minor but useful features.

WARNING: the file backup variable `backup-files' has been renamed to
`backup-method' and the behavior has changed.  Please take a look at the
sample initialization file (press `C-h s').

Changes between Zile 1.0a4 - Zile 1.0a5

* Implemented `insert-buffer', `insert-file'.
* Implemented `start-kbd-macro', `end-kbd-macro', `call-last-kbd-macro'.
* Implemented novice mode.
* Lot of bug fixes and minor changes.

Changes between Zile 1.0a3 - Zile 1.0a4

* Rewritten from scratch for adding proper windows code, using a better
  coding that's more simple to fix.
* Cleaned up editor structures.
* Added independent terminal support.

Changes between Zile 1.0a2 - Zile 1.0a3

* Rewritten buffer list handling.  Now it is more simple, bug free and
  like Emacs one.
* Rewritten key binding.
* Removed `next-buffer' (C-x C-n) and `previous-buffer' (C-x C-p) commands
  due to the new buffer list handling.
* Added `--with-ndebug' switch to configure.
* Fixed access permissions on saving.

Changes between Zile 1.0a1 - Zile 1.0a2

* Added a new Texinfo manual (not yet finished).
* Added the undo facility.
* Added `universal-argument' (C-u) facility.
* Added `tab-width' variable.
* Added the time display to the status line; added the `display-time' and
  `display-time-format' variables.
* Added revisions facility to backup.
* Added variables to allow changing of highlight colors.
* Added `status-line-color' variable.
* Added delayed key sequence completion.
* Removed `mode-line-like-emacs' variable and facility.
* Rewritten variable handling.  Now the variables are stored into an hash
  table.
* Rewritten `list-buffers' to be more verbose.
* All the editor functions are now declared with `DEFUN()'.
* Fixed handling of tabulations.
* Fixed FreeBSD refresh bug.
* Minor fixes to font lock.
