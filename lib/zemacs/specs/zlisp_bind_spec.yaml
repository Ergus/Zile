specify zlisp/bind:
- describe where-is:
  - context in batch mode:
    - before:
        zemacs = Zemacs {"--batch"}
    # Lisp context only - you can't send keystrokes in batch mode!
    - context with lisp:
      - it writes bindings to stdout:
          expect (zemacs:edit [[(where-is 'where-is)]]).
            should_contain_output.all_of {"where-is", "C-h w", "<f1> w"}
      - it writes unbound command to stdout:
          expect (zemacs:edit [[(where-is 'auto-fill-mode)]]).
            should_contain_output "auto-fill-mode is not on any key"
      - it writes bindings to current buffer:
          expect (zemacs:edit [[(where-is 'where-is t)]]).
            should_write_to_buffer.all_of {"where-is", "C-h w", "<f1> w"}
      - it writes unbound command to current buffer:
          expect (zemacs:edit [[(where-is 'auto-fill-mode t)]]).
            should_write_to_buffer "M-x auto-fill-mode RET"

  - context in interactive mode:
    - before:
        zemacs = Zemacs {"--no-init-file"}
    - context with lisp:
      - it writes bindings to minibuf:
          expect (zemacs:edit [[(where-is 'where-is)]]).
            should_write_to_minibuf.all_of {"where-is", "C-h w", "<f1> w"}
      - it writes unbound command to minibuf:
          expect (zemacs:edit [[(where-is 'auto-fill-mode)]]).
            should_write_to_minibuf "auto-fill-mode is not on any key"
      - it writes bindings to current buffer:
          expect (zemacs:edit [[(where-is 'where-is t)]]).
            should_write_to_buffer.all_of {"where-is", "C-h w", "<f1> w"}
      - it writes unbound command to current buffer:
          expect (zemacs:edit [[(where-is 'auto-fill-mode t)]]).
            should_write_to_buffer "M-x auto-fill-mode RET"
    - context with keystrokes:
      - it writes bindings to minibuf:
          expect (zemacs:edit [[\C-hwwhere-is\r]]).
            should_write_to_minibuf.all_of {"where-is", "C-h w", "<f1> w"}
      - it writes unbound command to minibuf:
          expect (zemacs:edit [[\C-hwauto-fill-mode\r]]).
            should_write_to_minibuf "auto-fill-mode is not on any key"
      - it writes bindings to current buffer:
          expect (zemacs:edit [[\C-u\C-hwwhere-is\r]]).
            should_write_to_buffer.all_of {"where-is", "C-h w", "<f1> w"}
      - it writes unbound command to current buffer:
          expect (zemacs:edit [[\C-u\C-hwauto-fill-mode\r]]).
            should_write_to_buffer "M-x auto-fill-mode RET"
