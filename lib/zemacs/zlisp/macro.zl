;; Macro facility commands.
;;
;; Copyright (c) 2010-2014 Free Software Foundation, Inc.
;;
;; This file is part of GNU Zile.
;;
;; This program is free software; you can redistribute it and/or modify it
;; under the terms of the GNU General Public License as published by
;; the Free Software Foundation; either version 3, or (at your option)
;; any later version.
;;
;; This program is distributed in the hope that it will be useful, but
;; WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;; General Public License for more details.
;;
;; You should have received a copy of the GNU General Public License
;; along with this program.  If not, see <http://www.gnu.org/licenses/>.


(defsubr start-kbd-macro ()
  "Record subsequent keyboard input, defining a keyboard macro.
The commands are recorded even as they are executed.
Use \\[end-kbd-macro] to finish recording and make the macro available."
  (interactive)
    "if thisflag.defining_macro then
      minibuf_error ('Already defining a keyboard macro')
      return false
    end

    if cur_mp ~= nil then
      cancel_kbd_macro ()
    end

    minibuf_write ('Defining keyboard macro...')

    thisflag.defining_macro = true
    cur_mp = {}")


(defsubr end-kbd-macro ()
  "Finish defining a keyboard macro.
The definition was started by \\[start-kbd-macro].
The macro is now available for use via \\[execute-kbd-macro]."
  (interactive)
    "if not thisflag.defining_macro then
      minibuf_error ('Not defining a keyboard macro')
      return false
    end

    thisflag.defining_macro = false")


(defsubr call-last-kbd-macro ()
  "Call the last keyboard macro that you defined with \\[start-kbd-macro].
A prefix argument serves as a repeat count."
  (interactive)
    "if cur_mp == nil then
      minibuf_error ('No kbd macro has been defined')
      return false
    end

    -- FIXME: Call execute-kbd-macro (needs a way to reverse keystrtovec)
    macro_keys = cur_mp
    execute_with_uniarg (true, current_prefix_arg, call_macro)")


(defsubr execute-kbd-macro (keystr)
  "Execute macro as string of editor command characters."
    "local keys = keystrtovec (keystr)
    if keys ~= nil then
      macro_keys = keys
      execute_with_uniarg (true, current_prefix_arg, call_macro)
      return true
    end")
