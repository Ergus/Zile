Copyright (c) 1985 Free Software Foundation, Inc;  See end for conditions.

Modified for Zile by Sandro Sigala <sandro@sigala.it>.

You are looking at the Zile tutorial.

Zile commands generally involve the CONTROL key (sometimes labeled
CTRL or CTL) or the META key (sometimes labeled EDIT or ALT).  Rather than
write that in full each time, we'll use the following abbreviations:

 C-<chr>  means hold the CONTROL key while typing the character <chr>
	  Thus, C-f would be: hold the CONTROL key and type f.
 M-<chr>  means hold the META or EDIT or ALT key down while typing <chr>.
	  If there is no META, EDIT or ALT key, instead press and release the
	  ESC key and then type <chr>.  We write <ESC> for the ESC key.

Important note: to end the Zile session, type C-x C-c.  (Two characters.)
The characters ">>" at the left margin indicate directions for you to
try using a command.  For instance:
<<Blank lines inserted here by startup of help-with-tutorial>>
>>  Now type C-v (View next screen) to move to the next screen.
	(go ahead, do it by depressing the control key and v together).
	From now on, you'll be expected to do this whenever you finish
	reading the screen.

Note that there is an overlap when going from screen to screen; this
provides some continuity when moving through the file.

The first thing that you need to know is how to move around from
place to place in the file.  You already know how to move forward a
screen, with C-v.  To move backwards a screen, type M-v (depress the
META key and type v, or type <ESC>v if you don't have a META or EDIT
key).

>>  Try typing M-v and then C-v to move back and forth a few times.


* SUMMARY
---------

The following commands are useful for viewing screenfuls:

	C-v	Move forward one screenful
	M-v	Move backward one screenful
	C-l	Clear screen and redisplay everything
		 putting the text near the cursor at the center.
		 (That's control-L, not control-1.)

>> Find the cursor and remember what text is near it.
   Then type a C-l.
   Find the cursor again and see what text is near it now.


* BASIC CURSOR CONTROL
----------------------

Getting from screenful to screenful is useful, but how do you
reposition yourself within a given screen to a specific place?
There are several ways you can do this.  One way (not the best, but
the most basic) is to use the commands previous, backward, forward
and next.  As you can imagine these commands (which are given to
Zile as C-p, C-b, C-f, and C-n  respectively) move the cursor from
where it currently is to a new place in the given direction.  Here,
in a more graphical form are the commands:
 
			  Previous line, C-p
				  :
				  :
   Backward, C-b .... Current cursor position .... Forward, C-f
				  :
				  :
			  Next line, C-n

>> Move the cursor to the line in the middle of that diagram
   and type C-l to see the whole diagram centered in the screen.

You'll probably find it easy to think of these by letter.  P for
previous, N for next, B for backward and F for forward.  These are
the basic cursor positioning commands and you'll be using them ALL
the time so it would be of great benefit if you learn them now.

>> Do a few C-n's to bring the cursor down to this line.

>> Move into the line with C-f's and then up with C-p's.
   See what C-p does when the cursor is in the middle of the line.

Lines are separated by Newline characters.  For most applications
there should normally be a Newline character at the end of the text,
as well, but it is up to you to make sure of this.  A file can
validly exist without a Newline at the end.

>> Try to C-b at the beginning of a line.  Do a few more C-b's.
   Then do C-f's back to the end of the line and beyond.

When you go off the top or bottom of the screen, the text beyond
the edge is shifted onto the screen so that your instructions can
be carried out while keeping the cursor on the screen.

>> Try to move the cursor off the bottom of the screen with C-n and
   see what happens.

C-a and C-e move to the beginning or end of a line.

>> Try a couple of C-a's, and then a couple of C-e's.

Two other simple cursor motion commands are M-< (Meta Less-than),
which moves to the beginning of the file, and M-> (Meta Greater-than),
which moves to the end of the file.  You probably don't need to try
them, since finding this spot again will be boring.  On most terminals
the "<" is above the comma and you must use the shift key to type it.
On these terminals you must use the shift key to type M-< also;
without the shift key, you would be typing M-comma.

The location of the cursor in the text is also called "point".  To
paraphrase, the cursor shows on the screen where point is located in
the text.

Here is a summary of simple moving operations including the word and
sentence moving commands:

	C-f	Move forward a character
	C-b	Move backward a character

	C-n	Move to next line
	C-p	Move to previous line

	C-a	Move to beginning of line
	C-e	Move to end of line

	M-<	Go to beginning of file
	M->	Go to end of file

>> Try all of these commands now a few times for practice.
   Since the last two will take you away from this screen,
   you can come back here with M-v's and C-v's.  These are
   the most often used commands.


* WHEN ZILE IS HUNG
--------------------

If Zile gets into an infinite (or simply very long) computation which
you don't want to finish, you can stop it safely by typing C-g.
You can also use C-g to discard a numeric argument or the beginning of
a command that you don't want to finish.


* INSERTING AND DELETING
------------------------

If you want to insert text, just type it.  Characters which you can
see, such as A, 7, *, etc. are taken by Zile as text and inserted
immediately.  Type <Return> (the carriage-return key) to insert a
Newline character.

You can delete the last character you typed by typing <Delete>.
<Delete> is a key on the keyboard, which may be labeled "Del".  In
some cases, the "Backspace" key serves as <Delete>, but not always!

More generally, <Delete> deletes the character immediately before the
current cursor position.

>> Do this now, type a few characters and then delete them
   by typing <Delete> a few times.  Don't worry about this file
   being changed; you won't affect the master tutorial.  This is just
   a copy of it.

>> Now start typing text until you reach the right margin, and keep
   typing.  When a line of text gets too big for one line on the
   screen, the line of text is "continued" onto a second screen line.
   The backslash at the right margin indicates a line which has
   been continued.
>> Use <Delete>s to delete the text until the line fits on one screen
   line again.  The continuation line goes away.

>> Move the cursor to the beginning of a line and type <Delete>.  This
   deletes the newline before the line and merges the line onto
   the previous line.  The resulting line may be too long to fit, in
   which case it has a continuation line.
>> Type <Return> to reinsert the Newline you deleted.

You've now learned the most basic way of typing something in
Zile and correcting errors.  You can delete by words or lines
as well.  Here is a summary of the delete operations:

	<Delete>     delete the character just before the cursor
	C-d   	     delete the next character after the cursor

	C-k	     kill from the cursor position to end of line

Now suppose you kill something, and then you decide that you want to
get it back?  Well, whenever you kill something bigger than a
character, Zile saves it for you.  To yank it back, use C-y.  You
can kill text in one place, move elsewhere, and then do C-y; this is
a good way to move text around.  Note that the difference
between "Killing" and "Deleting" something is that "Killed" things
can be yanked back, and "Deleted" things cannot.  Generally, the
commands that can destroy a lot of text save it, while the ones that
attack only one character, or nothing but blank lines and spaces, do
not save.

For instance, type C-n a couple times to position the cursor
at some line on this screen.

>> Do this now, move the cursor and kill that line with C-k.

Note that a single C-k kills the contents of the line, and a second
C-k kills the line itself, and make all the other lines move up.  If
you give C-k a repeat count, it kills that many lines AND their
contents.

The text that has just disappeared is saved so that you can
retrieve it.  To retrieve the last killed text and put it where
the cursor currently is, type C-y.

>> Try it; type C-y to yank the text back.

Think of C-y as if you were yanking something back that someone
took away from you.  Notice that if you do several C-k's in a row
the text that is killed is all saved together so that one C-y will
yank all of the lines.

>> Do this now, type C-k several times.

Now to retrieve that killed text:

>> Type C-y.  Then move the cursor down a few lines and type C-y
   again.  You now see how to copy some text.


* FILES
-------

In order to make the text you edit permanent, you must put it in a
file.  Otherwise, it will go away when your invocation of Zile goes
away.  You put your editing in a file by "finding" the file.  What
finding means is that you see the contents of the file in your Zile;
and, loosely speaking, what you are editing is the file itself.
However, the changes still don't become permanent until you "save" the
file.  This is so you can have control to avoid leaving a half-changed
file around when you don't want to.  Even then, Zile leaves the
original file under a changed name in case your changes turn out
to be a mistake.

If you look near the bottom of the screen you will see a line that
begins and ends with dashes, and contains the string "Zile: TUTORIAL".
Your copy of the Zile tutorial is called "TUTORIAL".  Whatever
file you find, that file's name will appear in that precise
spot.

The commands for finding and saving files are unlike the other
commands you have learned in that they consist of two characters.
They both start with the character Control-x.  There is a whole series
of commands that start with Control-x; many of them have to do with
files, buffers, and related things, and all of them consist of
Control-x followed by some other character.

Another thing about the command for finding a file is that you have
to say what file name you want.  We say the command "reads an argument
from the terminal" (in this case, the argument is the name of the
file).  After you type the command

	C-x C-f   Find a file

Zile asks you to type the file name.  It echoes on the bottom
line of the screen.  You are using the minibuffer now!  this is
what the minibuffer is for.  When you type <Return> to end the
file name, the minibuffer is no longer needed, so it disappears.

>> Type C-x C-f, then type C-g.  This cancels the minibuffer,
   and also cancels the C-x C-f command that was using the
   minibuffer.  So you do not find any file.

In a little while the file contents appear on the screen.  You can
edit the contents.  When you wish to make the changes permanent,
issue the command

	C-x C-s   Save the file

The contents of Zile are written into the file.  The first time you
do this, the original file is renamed to a new name so that it
is not lost.  The new name is made by appending "~" to the end
of the original file's name.

When saving is finished, Zile prints the name of the file written.
You should save fairly often, so that you will not lose very much
work if the system should crash.

>> Type C-x C-s, saving your copy of the tutorial.
   This should print "Wrote .../TUTORIAL" at the bottom of the screen.

NOTE: On some systems, typing C-x C-s will freeze the screen and you
will see no further output from Zile.  This indicates that an
operating system "feature" called "flow control" is intercepting the
C-s and not letting it get through to Zile.  To unfreeze the screen,
type C-q.

To make a new file, just find it "as if" it already existed.  Then
start typing in the text.  When you ask to "save" the file, Zile
will really create the file with the text that you have inserted.
From then on, you can consider yourself to be editing an already
existing file.


* BUFFERS
---------

If you find a second file with C-x C-f, the first file remains
inside Zile.  You can switch back to it by finding it again with
C-x C-f.  This way you can get quite a number of files inside Zile.

The object inside Zile which holds the text read from one file
is called a "buffer."  Finding a file makes a new buffer inside Zile.
To see a list of the buffers that exist in Zile, type

	C-x C-b   List buffers

>> Try C-x C-b now.

See how each buffer has a name, and it may also have a file name
for the file whose contents it holds.  Some buffers do not correspond
to files.  For example, the buffer named "*Buffer List*" does
not have any file.  It is the buffer which contains the buffer
list that was made by C-x C-b.  ANY text you see in an Zile window
has to be in some buffer.

If you make changes to the text of one file, then find another file,
this does not save the first file.  Its changes remain inside Zile,
in that file's buffer.  The creation or editing of the second file's
buffer has no effect on the first file's buffer.  This is very useful,
but it also means that you need a convenient way to save the first
file's buffer.  It would be a nuisance to have to switch back to
it with C-x C-f in order to save it with C-x C-s.  So we have

	C-x s     Save some buffers

C-x s goes through the list of all the buffers you have
and finds the ones that contain files you have changed.
For each such buffer, C-x s asks you whether to save it.


* EXTENDING THE COMMAND SET
---------------------------

There are many, many more Zile commands than could possibly be put
on all the control and meta characters.  Zile gets around this with
the X (eXtend) command.  This comes in two flavors:

	C-x	Character eXtend.  Followed by one character.
	M-x	Named command eXtend.  Followed by a long name.

These are commands that are generally useful but used less than the
commands you have already learned about.  You have already seen two
of them: the file commands C-x C-f to Find and C-x C-s to Save.
Another example is the command to tell Zile that you'd like to stop
editing and get rid of Zile.  The command to do this is C-x C-c.
(Don't worry; it offers to save each changed file before it kills the
Zile.)

C-z is the command to exit Zile *temporarily*--so that you can go
back to the same Zile session afterward.

On systems which allow it, C-z exits from Zile to the shell but does
not destroy the Zile; if you use the C shell, you can resume Zile
with the `fg' command (or, more generally, with `%zile', which works
even if your most recent job was some other).  On systems which don't
implement suspending, C-z creates a subshell running under Zile to
give you the chance to run other programs and return to Zile
afterward; it does not truly "exit" from Zile.  In this case, the
shell command `exit' is the usual way to get back to Zile from the
subshell.

The time to use C-x C-c is when you are about to log out.  It's also
the right thing to use to exit an Zile invoked under mail handling
programs and other random utilities, since they may not know how to
cope with suspension of Zile.  On other occasions, use C-z, and
resume the Zile when you have more editing to do.

There are many C-x commands.  The ones you know are:

	C-x C-f		Find file.
	C-x C-s		Save file.
	C-x C-b		List buffers.
	C-x C-c		Quit Zile.

Named eXtended commands are commands which are used even less
frequently, or commands which are used only in certain modes.  These
commands are usually called "functions".


* MODE LINE
-----------

If Zile sees that you are typing commands slowly it shows them to you
at the bottom of the screen in an area called the "echo area."  The echo
area contains the bottom line of the screen.  The line immediately above
it is called the MODE LINE.  The mode line says something like

--**-Zile: TUTORIAL          (Text)--58%----------------------

This is a very useful "information" line.

You already know what the filename means--it is the file you have
found.  What the --NN%-- means is that NN percent of the file is
above the top of the screen.  If the top of the file is on the screen,
it will say --Top-- instead of --00%--.  If the bottom of the file is
on the screen, it will say --Bot--.  If you are looking at a file so
small it all fits on the screen, it says --All--.

The stars near the front mean that you have made changes to the text.
Right after you visit or save a file, there are no stars, just dashes.

The part of the mode line inside the parentheses is to tell you what
modes you are in.  The default mode is Text which is what you
are in now.  It is an example of a "major mode". At any time one and
only one major mode is active, and its name can always be found in the
mode line just where "Text" is now.


* CONCLUSION
------------

Remember, to exit Zile permanently use C-x C-c.  To exit to a shell
temporarily, so that you can come back in, use C-z.

This tutorial is meant to be understandable to all new users, so if
you found something unclear, don't sit and blame yourself - complain!


* COPYING
---------

This tutorial descends from a long line of Emacs tutorials
starting with the one written by Stuart Cracraft for the original Emacs.

This version has been modified for Zile.  You may find the original text
in the Emacs sources at ftp://prep.ai.mit.edu/pub/gnu/.

The tutorial is copyrighted, and comes with permission to distribute copies
on certain conditions:

Copyright (c) 1985 Free Software Foundation

   Permission is granted to anyone to make or distribute verbatim copies
   of this document as received, in any medium, provided that the
   copyright notice and permission notice are preserved,
   and that the distributor grants the recipient permission
   for further redistribution as permitted by this notice.

   Permission is granted to distribute modified versions
   of this document, or of portions of it,
   under the above conditions, provided also that they
   carry prominent notices stating who last altered them.
