                Zile FAQ - Frequently Asked Questions

     Copyright (c) 1997-2014 Free Software Foundation, Inc.

     Copying and distribution of this file, with or without
     modification, are permitted in any medium without royalty
     provided the copyright notice and this notice are preserved.

------------------------------------------------------------------------------

INDEX

1 Functionality
   1.1 Some keys don't work (e.g. `C-h' does backspace).
   1.2 The META/ALT key doesn't work in xterm.
   1.3 How do I handle non-ASCII characters?
   1.4 Why are my settings being ignored?

2 General questions
   2.1 What does `Zile' mean?
   2.2 What happend to the 'zile' lightweight emacs clone binary?
   2.3 Does Zile support Unicode/UTF-8?

3 Zmacs
   3.1 Why another clone of Emacs?  Why not just use Emacs?
   2.2 I like the xyz function of Emacs but it's not in Zile!

4 Zi
   4.1 Are you kidding me?  Emacs sucks, where is the lightweight vi clone?

5 Zz
   5.1 How about some more editors, as examples, then?

------------------------------------------------------------------------------

1 Functionality

1.1 Some keys don't work (e.g. `C-h' does backspace).

    The terminfo entry for your terminal type is probably incorrect.
    Rebuilding Zile against the latest ncurses may help.

    With Mac OS X, Terminal.app outputs different escape sequences
    than described by the xterm-color terminfo entry. Make sure you
    have the default terminal type preference set to xterm-256color,
    or else run Zile with:

        TERM=xterm-256color zile

1.2 The META/ALT key doesn't work in xterm.

    This is probably because you are using "8-bit input".
    Using the following X resources should make things work:

      XTerm*eightBitInput: false
      UXTerm*eightBitInput: false

    Typically you'll want to put these lines in your ~/.Xresources
    file.

1.3 How do I handle non-ASCII characters?

    Zile uses the operating system's locale support, so you need to
    set an appropriate locale; how you do this depends on your OS.
    However, Zile only works with 8-bit locales.

1.4 Why are my settings in ~/.zile being ignored?

    That file is called ~/.zmacs nowadays.

    Since Zile 2.2.16, booleans are, as in Emacs, `t' and `nil' rather
    than `true' and `false'. If you haven't yet updated your settings,
    you should do so.

------------------------------------------------------------------------------

2 General questions

2.1 What does `Zile' mean?

    It stands for `Zile Implements Lua Editors'. It is just another
    recursive acronym like `GNU'.  The reason that it's not written in
    all caps is because Emacs (which is also an acronym) isn't either.

2.2 What happend to the 'zile' lightweight emacs clone binary?

    When Zile was still written in C, it stood for 'Zile is lossy Emacs'
    and you ran it using the 'zile' executable.  The Lua rewrite is
    fabulously more flexible, allowing you to write whatever kind of
    editor you like with it.  Don't believe me?  Then check out the
    new 'zmacs' executable, which does everything C Zile used to, and
    more.

2.3 Does Zile support Unicode/UTF-8?

    No.

------------------------------------------------------------------------------

3 Zmacs

3.1 Why another clone of Emacs?  Why not just use Emacs?

    Zmacs is a small, portable Emacs for systems and situations in
    which Emacs would be unsuitable, including small systems and quick
    editing sessions.

3.2 I like the xyz function of Emacs but it's not in Zmacs!

    Zmacs was written as an example of the kinds of editors you can
    write with Zile.  If Zmacs is almost what you want, then just add
    the feature(s) you need.  If you hate Zmacs, you can use Zile to
    code up whatever sort of text editor you want!

------------------------------------------------------------------------------

4 Zi

4.1 Are you kidding me?  Emacs sucks, where is the lightweight vi clone?

    You haven't written it yet!  Remember, Zile Implements Lua Editors,
    so you're more than half way there already, you just have to plumb
    it together and write a bit of glue code.  And now that everything is
    in Lua, you don't even need to wait for it to compile.

    The repository is organized to enable distributing several different
    editors already, and I'll be happy to add your Zi implementation to
    the next release after you've sent me your patches.

------------------------------------------------------------------------------

5 Zz

5.1 How about some more editors, as examples, then?

    Sure!  Where Zmacs is a reimplementation of C Zile (and then some)
    for the old timers... Zz is the editor I actually use for my
    day-to-day editing.  I even use Zz to maintain Zmacs.
