Copyright (c) 1985, 1996 Free Software Foundation, Inc. See end for conditions.

Modified for Zile by Sandro Sigala <sandro@sigala.it>.

You are looking at the Zile tutorial.

Zile commands generally involve the CONTROL key (sometimes labelled
CTRL or CTL) or the META key.  On some keyboards, the META key is
labelled ALT or EDIT or something else (for example, on Sun keyboards,
the diamond key to the left of the spacebar is META).  If you have no
META key, you can use ESC instead.  Rather than write out META or
CONTROL each time we want you to prefix a character, we'll use the
following abbreviations:

 C-<chr>  means hold the CONTROL key while typing the character <chr>
	  Thus, C-f would be: hold the CONTROL key and type f.
 M-<chr>  means hold the META key down while typing <chr>.  If there
	  is no META key, type <ESC>, release it, then type the
	  character <chr>.

Important note: to end the Zile session, type C-x C-c.  (Two characters.)
The characters ">>" at the left margin indicate directions for you to
try using a command.  For instance:

>>  Now type C-v (View next screen) to move to the next screen.
	(go ahead, do it by holding down the control key while typing v).
	From now on, you should do this again whenever you finish
	reading the screen.

Note that there is an overlap of two lines when you move from screen
to screen; this provides some continuity so you can continue reading
the text.

The first thing that you need to know is how to move around from place
to place in the text.  You already know how to move forward one screen,
with C-v.  To move backwards one screen, type M-v (hold down the META key
and type v, or type <ESC>v if you do not have a META, EDIT, or ALT key).

>>  Try typing M-v and then C-v, a few times.


* SUMMARY
---------

The following commands are useful for viewing screenfuls:

	C-v	Move forward one screenful
	M-v	Move backward one screenful
	C-l	Clear screen and redisplay everything
		 putting the text near the cursor at the center.
		 (That's control-L, not control-1.)

>> Find the cursor, and note what text is near it.
   Then type C-l.
   Find the cursor again and notice that the same text
   is near the cursor now.


* BASIC CURSOR CONTROL
----------------------

Moving from screenful to screenful is useful, but how do you
move to a specific place within the text on the screen?

There are several ways you can do this.  The most basic way is to use
the commands C-p, C-b, C-f, and C-n.  Each of these commands moves the
cursor one row or column in a particular direction on the screen.
Here is a table showing these four commands and shows the directions
they move:
 
			  Previous line, C-p
				  :
				  :
   Backward, C-b .... Current cursor position .... Forward, C-f
				  :
				  :
			    Next line, C-n

>> Move the cursor to the line in the middle of that diagram
   using C-n or C-p.  Then type C-l to see the whole diagram
   centered in the screen.

You'll probably find it easy to think of these by letter: P for
previous, N for next, B for backward and F for forward.  These are the
basic cursor positioning commands, and you'll be using them ALL the
time, so it would be of great benefit if you learn them now.

>> Do a few C-n's to bring the cursor down to this line.

>> Move into the line with C-f's and then up with C-p's.
   See what C-p does when the cursor is in the middle of the line.

Each of text line ends with a Newline character, which serves to
separate it from the following line.  The last line in your file ought
to have a Newline at the end (but Zile does not require it to have
one).

>> Try to C-b at the beginning of a line.  It should move to
   the end of the previous line.  This is because it moves back
   across the Newline character.

C-f can move across a Newline just like C-b.

>> Do a few more C-b's, so you get a feel for where the cursor is.
   Then do C-f's to return to the end of the line.
   Then do one more C-f to move to the following line.

When you move past the top or bottom of the screen, the text beyond
the edge shifts onto the screen.  This is called "scrolling".  It
enables Zile to move the cursor to the specified place in the text
without moving it off the screen.

>> Try to move the cursor off the bottom of the screen with C-n, and
   see what happens.

If moving by characters is too slow, you can move by words.  M-f
(Meta-f) moves forward a word and M-b moves back a word.

>> Type a few M-f's and M-b's.

When you are in the middle of a word, M-f moves to the end of the word.
When you are in whitespace between words, M-f moves to the end of the
following word.  M-b works likewise in the opposite direction.

>> Type M-f and M-b a few times, interspersed with C-f's and C-b's
   so that you can observe the action of M-f and M-b from various
   places inside and between words.

Notice the parallel between C-f and C-b on the one hand, and M-f and
M-b on the other hand.  Very often Meta characters are used for
operations related to the units defined by language (words,
paragraphs), while Control characters operate on basic units that are
independent of what you are editing (characters, lines, etc).

The location of the cursor in the text is also called "point".  To
paraphrase, the cursor shows on the screen where point is located in
the text.

Here is a summary of simple cursor-moving operations, including the
word moving commands:

	C-f	Move forward a character
	C-b	Move backward a character

	M-f	Move forward a word
	M-b	Move backward a word

	C-n	Move to next line
	C-p	Move to previous line

	C-a	Move to beginning of line
	C-e	Move to end of line

>> Try all of these commands now a few times for practice.
   These are the most often used commands.

Two other important cursor motion commands are M-< (Meta Less-than),
which moves to the beginning of the whole text, and M-> (Meta
Greater-than), which moves to the end of the whole text.

On most terminals, the "<" is above the comma, so you must use the
shift key to type it.  On these terminals you must use the shift key
to type M-< also; without the shift key, you would be typing M-comma.

>> Try M-< now, to move to the beginning of the tutorial.
   Then use C-v repeatedly to move back here.

>> Try M-> now, to move to the end of the tutorial.
   Then use M-v repeatedly to move back here.

You can also move the cursor with the arrow keys, if your terminal has
arrow keys.  We recommend learning C-b, C-f, C-n and C-p for three
reasons.  First, they work on all kinds of terminals.  Second, once
you gain practice at using Zile, you will find that typing these CTRL
characters is faster than typing the arrow keys (because you do not
have to move your hands away from touch-typing position).  Third, once
you form the habit of using these CTRL character commands, you can
easily learn to use other advanced cursor motion commands as well.

Most Zile commands accept a numeric argument; for most commands, this
serves as a repeat-count.  The way you give a command a repeat count
is by typing C-u and then the digits before you type the command.  If
you have a META (or EDIT or ALT) key, there is another alternative way
to enter a numeric argument: type the digits while holding down the
META key.  We recommend learning the C-u method because it works on
any terminal.

For instance, C-u 8 C-f moves forward eight characters.
	
>> Try using C-n or C-p with a numeric argument, to move the cursor
   to a line near this one with just one command.

Most commands use the numeric argument as a repeat count.  Certain
exceptional commands use it differently.

* WHEN ZILE IS HUNG
-------------------

If Zile stops responding to your commands, you can stop it safely by
typing C-g.  You can use C-g to stop a command which is taking too
long to execute.

You can also use C-g to discard a numeric argument or the beginning of
a command that you do not want to finish.

>> Type C-u 100 to make a numeric arg of 100, then type C-g.
   Now type C-f.  It should move just one character,
   because you canceled the argument with C-g.

If you have typed an <ESC> by mistake, you can get rid of it
with a C-g.


* WINDOWS
---------

Zile can have several windows, each displaying its own text.

At this stage it is better not to go into the techniques of
using multiple windows.  But you do need to know how to get
rid of extra windows that may appear to display help or
output from certain commands.  It is simple:

	C-x 1	One window (i.e., kill all other windows).

That is Control-x followed by the digit 1.  C-x 1 expands the window
which contains the cursor, to occupy the full screen.  It deletes all
other windows.

>> Move the cursor to this line and type C-l.

(Remember that C-l redraws the screen and recenters the current line.)

>> Type Control-x 2
   See how this window shrinks, while a new one appears
   to display contents of this buffer.

>> Type C-x 1 and see the new window disappear.


* INSERTING AND DELETING
------------------------

If you want to insert text, just type the text.  Characters which you
can see, such as A, 7, *, etc. are taken by Zile as text and inserted
immediately.  Type <Return> (the carriage-return key) to insert a
Newline character.

You can delete the last character you typed by typing <Delete>.
<Delete> is a key on the keyboard, which may be labeled "Del".  In
some cases, the "Backspace" key serves as <Delete>, but not always!

More generally, <Delete> deletes the character immediately before the
current cursor position.

>> Do this now--type a few characters, then delete them
   by typing <Delete> a few times.  Don't worry about this file
   being changed; you will not alter the master tutorial.  This is
   your personal copy of it.

>> Insert text until you reach the right margin, and keep on inserting.
   You'll see a continuation line appear.

>> Use <Delete>s to delete the text until the line fits on one screen
   line again.  The continuation line goes away.

You can delete a Newline character just like any other character.
Deleting the Newline character between two lines merges them into
one line.  If the resulting combined line is too long to fit in the
screen width, it will be displayed with a continuation line.

>> Move the cursor to the beginning of a line and type <Delete>.  This
   merges that line with the previous line.

>> Type <Return> to reinsert the Newline you deleted.

Remember that most Zile commands can be given a repeat count;
this includes text characters.  Repeating a text character inserts
it several times.

>>  Try that now -- type C-u 8 * to insert ********.

You've now learned the most basic way of typing something in
Zile and correcting errors.  You can delete by words or lines
as well.  Here is a summary of the delete operations:

	<Delete>     delete the character just before the cursor
	C-d   	     delete the next character after the cursor

	M-<Delete>   kill the word immediately before the cursor
	M-d	     kill the next word after the cursor

	C-k	     kill from the cursor position to end of line

Notice that <Delete> and C-d vs M-<Delete> and M-d extend the parallel
started by C-f and M-f (well, <Delete> is not really a control
character, but let's not worry about that).

When you delete more than one character at a time, Zile saves the
deleted text so that you can bring it back.  Bringing back killed text
is called "yanking".  You can yank the killed text either at the same
place where it was killed, or at some other place in the text.  You
can yank the text several times in order to make multiple copies of
it.  The command to yank is C-y.

Note that the difference between "Killing" and "Deleting" something is
that "Killed" things can be yanked back, and "Deleted" things cannot.
Generally, the commands that can remove a lot of text save the text,
while the commands that delete just one character, or just blank lines
and spaces, do not save the deleted text.

>> Move the cursor to the  beginning of a line which is not empty.
   Then type C-k to kill the text on that line.
>> Type C-k a second time.  You'll see that it kills the Newline
   which follows that line.

Note that a single C-k kills the contents of the line, and a second
C-k kills the line itself, and make all the other lines move up.
To retrieve the last killed text and put it where the cursor currently
is, type C-y.

>> Try it; type C-y to yank the text back.

Think of C-y as if you were yanking something back that someone took
away from you.  Notice that if you do several C-k's in a row, all of
the killed text is saved together, so that one C-y will yank all of
the lines.

>> Do this now, type C-k several times.

Now to retrieve that killed text:

>> Type C-y.  Then move the cursor down a few lines and type C-y
   again.  You now see how to copy some text.


* UNDO
------

If you make a change to the text, and then decide that it was a
mistake, you can undo the change with the undo command, C-x u.

Normally, C-x u undoes the changes made by one command; if you repeat
the C-x u several times in a row, each repetition undoes one
additional command.

But there is an exception: commands that do not change the text do
not count (this includes cursor motion commands and scrolling
command).

>> Kill this line with C-k, then type C-x u and it should reappear.

C-_ is an alternative undo command; it works just the same as C-x u,
but it is easier to type several times in a row.  The disadvantage of
C-_ is that on some keyboards it is not obvious how to type it.  That
is why we provide C-x u as well.  On some terminals, you can type C-_
by typing / while holding down CTRL.

A numeric argument to C-_ or C-x u acts as a repeat count.


* FILES
-------

In order to make the text you edit permanent, you must put it in a
file.  Otherwise, it will go away when your invocation of Zile goes
away.  You put your editing in a file by "finding" the file.  (This is
also called "visiting" the file.)

Finding a file means that you see the contents of the file within
Zile.  In many ways, it is as if you were editing the file itself.
However, the changes you make using Zile do not become permanent
until you "save" the file.  This is so you can avoid leaving a
half-changed file on the system when you do not want to.  Even when
you save, Zile leaves the original file under a changed name in case
you later decide that your changes were a mistake.

If you look near the bottom of the screen you will see a line that
begins and ends with dashes, and contains the string "Zile:
TUTORIAL".  This part of the screen always shows the name of the file
that you are visiting.  Right now, you are visiting a file called
"TUTORIAL" which is your personal scratch copy of the Zile tutorial.
Whatever file you find, that file's name will appear in that precise
spot.

The commands for finding and saving files are unlike the other
commands you have learned in that they consist of two characters.
They both start with the character Control-x.  There is a whole series
of commands that start with Control-x; many of them have to do with
files, buffers, and related things.  These commands are two, three or
four characters long.

Another thing about the command for finding a file is that you have
to say what file name you want.  We say the command "reads an argument
from the terminal" (in this case, the argument is the name of the
file).  After you type the command

	C-x C-f   Find a file

Zile asks you to type the file name.  The file name you type appears
on the bottom line of the screen.  The bottom line is called the
minibuffer when it is used for this sort of input.  You can use
ordinary Zile editing commands to edit the file name.

While you are entering the file name (or any minibuffer input),
you can cancel the command with C-g.

>> Type C-x C-f, then type C-g.  This cancels the minibuffer,
   and also cancels the C-x C-f command that was using the
   minibuffer.  So you do not find any file.

When you have finished entering the file name, type <Return> to
terminate it.  Then C-x C-f command goes to work, and finds the file
you chose.  The minibuffer disappears when the C-x C-f command is
finished.

In a little while the file contents appear on the screen, and you can
edit the contents.  When you wish to make your changes permanent,
type the command

	C-x C-s   Save the file

This copies the text within Zile into the file.  The first time you
do this, Zile renames the original file to a new name so that it is
not lost.  The new name is made by adding "~" to the end of the
original file's name.

When saving is finished, Zile prints the name of the file written.
You should save fairly often, so that you will not lose very much
work if the system should crash.

>> Type C-x C-s, saving your copy of the tutorial.
   This should print "Wrote ...TUTORIAL" at the bottom of the screen.

NOTE: On some systems, typing C-x C-s will freeze the screen and you
will see no further output from Zile.  This indicates that an
operating system "feature" called "flow control" is intercepting the
C-s and not letting it get through to Zile.  To unfreeze the screen,
type C-q.

You can find an existing file, to view it or edit it.  You can also
find a file which does not already exist.  This is the way to create a
file with Zile: find the file, which will start out empty, and then
begin inserting the text for the file.  When you ask to "save" the
file, Zile will really create the file with the text that you have
inserted.  From then on, you can consider yourself to be editing an
already existing file.


* BUFFERS
---------

If you find a second file with C-x C-f, the first file remains
inside Zile.  You can switch back to it by finding it again with
C-x C-f.  This way you can get quite a number of files inside Zile.

>> Create a file named "foo" by typing  C-x C-f foo <Return>.
   Then insert some text, edit it, and save "foo" by typing  C-x C-s.
   Finally, type C-x C-f TUTORIAL <Return>
   to come back to the tutorial.

Zile stores each file's text inside an object called a "buffer."
Finding a file makes a new buffer inside Zile.  To see a list of the
buffers that current exist in your Zile job, type

	C-x C-b   List buffers

>> Try C-x C-b now.

See how each buffer has a name, and it may also have a file name
for the file whose contents it holds.  Some buffers do not correspond
to files.  For example, the buffer named "*Buffer List*" does
not have any file.  It is the buffer which contains the buffer
list that was made by C-x C-b.  ANY text you see in an Zile window
is always part of some buffer.

>> Type C-x 1 to get rid of the buffer list.

If you make changes to the text of one file, then find another file,
this does not save the first file.  Its changes remain inside Zile,
in that file's buffer.  The creation or editing of the second file's
buffer has no effect on the first file's buffer.  This is very useful,
but it also means that you need a convenient way to save the first
file's buffer.  It would be a nuisance to have to switch back to
it with C-x C-f in order to save it with C-x C-s.  So we have

	C-x s     Save some buffers

C-x s asks you about each buffer which contains changes that you have
not saved.  It asks you, for each such buffer, whether to save the
buffer.

>> Insert a line of text, then type C-x s.
   It should ask you whether to save the buffer named TUTORIAL.
   Answer yes to the question by typing "y".

* EXTENDING THE COMMAND SET
---------------------------

There are many, many more Zile commands than could possibly be put
on all the control and meta characters.  Zile gets around this with
the X (eXtend) command.  This comes in two flavors:

	C-x	Character eXtend.  Followed by one character.
	M-x	Named command eXtend.  Followed by a long name.

These are commands that are generally useful but used less than the
commands you have already learned about.  You have already seen two of
them: the file commands C-x C-f to Find and C-x C-s to Save.  Another
example is the command to end the Zile session--this is the command
C-x C-c.  (Do not worry about losing changes you have made; C-x C-c
offers to save each changed file before it kills the Zile.)

C-z is the command to exit Zile *temporarily*--so that you can go
back to the same Zile session afterward.

On systems which allow it, C-z "suspends" Zile; that is, it returns
to the shell but does not destroy the Zile.  In the most common
shells, you can resume Zile with the `fg' command or with `%zile'.

On systems which do not implement suspending, C-z creates a subshell
running under Zile to give you the chance to run other programs and
return to Zile afterward; it does not truly "exit" from Zile.  In
this case, the shell command `exit' is the usual way to get back to
Zile from the subshell.

The time to use C-x C-c is when you are about to log out.  It's also
the right thing to use to exit an Zile invoked under mail handling
programs and other miscellaneous utilities, since they may not know
how to cope with suspension of Zile.  In ordinary circumstances,
though, if you are not about to log out, it is better to suspend Zile
with C-z instead of exiting Zile.

There are many C-x commands.  Here is a list of the ones you have learned:

	C-x C-f		Find file.
	C-x C-s		Save file.
	C-x C-b		List buffers.
	C-x C-c		Quit Zile.
	C-x u		Undo.

Named eXtended commands are commands which are used even less
frequently, or commands which are used only in certain modes.  An
example is the command replace-string, which globally replaces one
string with another.  When you type M-x, Zile prompts you at the
bottom of the screen with M-x and you should type the name of the
command; in this case, "replace-string".  Just type "repl s<TAB>" and
Zile will complete the name.  End the command name with <Return>.

The replace-string command requires two arguments--the string to be
replaced, and the string to replace it with.  You must end each
argument with <Return>.

>> Move the cursor to the blank line two lines below this one.
   Then type M-x repl s<Return>changed<Return>altered<Return>.

   Notice how this line has changed: you've replaced
   the word c-h-a-n-g-e-d with "altered" wherever it occurred,
   after the initial position of the cursor.


* ECHO AREA
-----------

If Zile sees that you are typing commands slowly it shows them to you
at the bottom of the screen in an area called the "echo area."  The echo
area contains the bottom line of the screen.


* MODELINE
-----------

The line immediately above the echo area it is called the "modeline".
The mode line says something like this:

--**-Zile: TUTORIAL          (Text)--L670/820,C1--78%----------------

This line gives useful information about the status of Zile and
the text you are editing.

You already know what the filename means--it is the file you have
found.  -NN%-- indicates your current position in the text; it means
that NN percent of the text is above the top of the screen.  If the
top of the file is on the screen, it will say --Top-- instead of
--00%--.  If the bottom of the text is on the screen, it will say
--Bot--.  If you are looking at text so small that all of it fits on
the screen, the mode line says --All--.

The stars near the front mean that you have made changes to the text.
Right after you visit or save a file, that part of the mode line shows
no stars, just dashes.

The part of the mode line inside the parentheses is to tell you what
editing modes you are in.  Each mode can be turned on or off by
itself, independent of all other modes.

One mode which is very useful, especially for editing plain text,
is Auto Fill mode.  When this mode is on, Zile breaks the line
in between words automatically whenever you insert text and make a
line that is too wide.

You can turn Auto Fill mode on by doing M-x auto-fill-mode<Return>.
When the mode is on, you can turn it off by doing M-x
auto-fill-mode<Return>.  If the mode is off, this command turns it on,
and if the mode is on, this command turns it off.  We say that the
command "toggles the mode".

>> Type M-x auto-fill-mode<Return> now.  Then insert a line of "asdf "
   over again until you see it divide into two lines.  You must put in
   spaces between them because Auto Fill breaks lines only at spaces.

The margin is usually set at 72 characters, but you can change it
with the C-x f command.  You should give the margin setting you want
as a numeric argument.

>> Type C-x f with an argument of 20.  (C-u 2 0 C-x f).
   Then type in some text and see Zile fill lines of 20
   characters with it.  Then set the margin back to 72 using
   C-x f again.

If you makes changes in the middle of a paragraph, Auto Fill mode
does not re-fill it for you.
To re-fill the paragraph, type M-q (Meta-q) with the cursor inside
that paragraph.

>> Move the cursor into the previous paragraph and type M-q.


* SEARCHING
-----------

Zile can do searches for strings (these are groups of contiguous
characters or words) either forward through the text or backward
through it.  Searching for a string is a cursor motion command;
it moves the cursor to the next place where that string appears.

The Zile search command is different from the search commands
of most editors, in that it is "incremental".  This means that the
search happens while you type in the string to search for.

The command to initiate a search is C-s for forward search, and C-r
for reverse search.  BUT WAIT!  Don't try them yet!

When you type C-s you'll notice that the string "I-search" appears as
a prompt in the echo area.  This tells you that Zile is in what is
called an incremental search waiting for you to type the thing that
you want to search for.  <Return> terminates a search.

>> Now type C-s to start a search.  SLOWLY, one letter at a time,
   type the word 'cursor', pausing after you type each
   character to notice what happens to the cursor.
   Now you have searched for "cursor", once.
>> Type C-s again, to search for the next occurrence of "cursor".
>> Now type <Delete> four times and see how the cursor moves.
>> Type <RET> to terminate the search.

Did you see what happened?  Zile, in an incremental search, tries to
go to the occurrence of the string that you've typed out so far,
highlighting it for your convenience.  To go to the next occurrence of
'cursor' just type C-s again.  If no such occurrence exists Zile
beeps and tells you the search is currently "failing", C-g would also
terminate the search.

NOTE: On some systems, typing C-s will freeze the screen and you will
see no further output from Zile.  This indicates that an operating
system "feature" called "flow control" is intercepting the C-s and not
letting it get through to Zile.  To unfreeze the screen, type C-q.

If you are in the middle of an incremental search and type <Delete>,
you'll notice that the last character in the search string is erased
and the search backs up to the last place of the search.  For
instance, suppose you have typed "c", to search for the first
occurrence of "c".  Now if you type "u", the cursor will move
to the first occurrence of "cu".  Now type <Delete>.  This erases
the "u" from the search string, and the cursor moves back to
the first occurrence of "c".

If you are in the middle of a search and type a control or meta
character (with a few exceptions--characters that are special in
a search, such as C-s and C-r), the search is terminated.

The C-s starts a search that looks for any occurrence of the search
string AFTER the current cursor position.  If you want to search for
something earlier in the text, type C-r instead.  Everything that we
have said about C-s also applies to C-r, except that the direction of
the search is reversed.


* MULTIPLE WINDOWS
------------------

One of the nice features of Zile is that you can display more than one
window on the screen at the same time.

>> Move the cursor to this line and type C-l.

>> Now type C-x 2 which splits the screen into two windows.
   Both windows display this tutorial.  The cursor stays in the top window.

>> Type C-x o ("o" for "other") to move the cursor to the bottom window.
>> Use C-v and M-v in the bottom window to scroll it.
   Keep reading these directions in the top window.

>> Type C-x o again to move the cursor back to the top window.
   The cursor in the top window is just where it was before.

You can keep using C-x o to switch between the windows.  Each
window has its own cursor position, but only one window actually
shows the cursor.  All the ordinary editing commands apply to the
window that the cursor is in.  We call this the "selected window".

>> Type C-x 1 (in the top window) to get rid of the bottom window.

(If you had typed C-x 1 in the bottom window, that would get rid
of the top one.  Think of this command as "Keep just one
window--the window I am already in.")

You do not have to display the same buffer in both windows.  If you
use C-x C-f to find a file in one window, the other window does not
change.  You can find a file in each window independently.


* CONCLUSION
------------

Remember, to exit Zile permanently use C-x C-c.  To exit to a shell
temporarily, so that you can come back in, use C-z.

This tutorial is meant to be understandable to all new users, so if
you found something unclear, don't sit and blame yourself - complain!


COPYING
-------

This tutorial descends from a long line of Emacs tutorials
starting with the one written by Stuart Cracraft for the original Emacs.
Ben Wing updated the tutorial for X Windows.  Martin Buchholz and
Hrvoje Niksic added more corrections for XEmacs.

This version has been modified for Zile.  You may find the original text
in the XEmacs sources at ftp://ftp.xemacs.org/pub/xemacs.

This version of the tutorial, like GNU Emacs, is copyrighted, and
comes with permission to distribute copies on certain conditions:

Copyright (c) 1985, 1996 Free Software Foundation

   Permission is granted to anyone to make or distribute verbatim copies
   of this document as received, in any medium, provided that the
   copyright notice and permission notice are preserved,
   and that the distributor grants the recipient permission
   for further redistribution as permitted by this notice.

   Permission is granted to distribute modified versions
   of this document, or of portions of it,
   under the above conditions, provided also that they
   carry prominent notices stating who last altered them.
